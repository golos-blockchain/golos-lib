/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg__asset_free(a: number): void;
export function _asset_fromString(a: number, b: number): number;
export function _asset_new(a: number, b: number, c: number, d: number): number;
export function _asset_clone(a: number): number;
export function _asset_amount(a: number): number;
export function _asset_set_amount(a: number, b: number): void;
export function _asset_amount_float(a: number, b: number): void;
export function _asset_set_amount_float(a: number, b: number, c: number): void;
export function _asset_updateAmountFloat(a: number, b: number, c: number, d: number): void;
export function _asset_precision(a: number): number;
export function _asset_set_precision(a: number, b: number): void;
export function _asset_symbol(a: number, b: number): void;
export function _asset_set_symbol(a: number, b: number, c: number): void;
export function _asset_is_uia(a: number): number;
export function _asset_toString(a: number, b: number, c: number, d: number): void;
export function _asset_float_string(a: number, b: number): void;
export function _asset__plus_num(a: number, b: number): number;
export function _asset__plus(a: number, b: number): number;
export function _asset__minus_num(a: number, b: number): number;
export function _asset__minus(a: number, b: number): number;
export function _asset__mul_num(a: number, b: number): number;
export function _asset__mul(a: number, b: number): number;
export function _asset__div_num(a: number, b: number): number;
export function _asset__div(a: number, b: number): number;
export function _asset__mod_num(a: number, b: number): number;
export function _asset__mod(a: number, b: number): number;
export function _asset__mul_price(a: number, b: number, c: number): number;
export function _asset_eq(a: number, b: number): number;
export function _asset_ne(a: number, b: number): number;
export function _asset_lt(a: number, b: number): number;
export function _asset_lte(a: number, b: number): number;
export function _asset_gt(a: number, b: number): number;
export function _asset_gte(a: number, b: number): number;
export function _asset_min(a: number, b: number): number;
export function _asset_max(a: number, b: number): number;
export function __wbg__asseteditor_free(a: number): void;
export function _asseteditor_fromAsset(a: number): number;
export function _asseteditor_fromString(a: number, b: number): number;
export function _asseteditor_new(a: number, b: number, c: number, d: number): number;
export function _asseteditor_withChange(a: number, b: number, c: number): number;
export function _asseteditor_asset(a: number): number;
export function _asseteditor_amount_str(a: number, b: number): void;
export function _asseteditor_has_change(a: number): number;
export function __wbg__price_free(a: number): void;
export function _price_new(a: number, b: number): number;
export function _price_clone(a: number): number;
export function _price_base(a: number): number;
export function _price_set_base(a: number, b: number): void;
export function _price_quote(a: number): number;
export function _price_set_quote(a: number, b: number): void;
export function __wbg_streaminghandle_free(a: number): void;
export function stream_block_number(a: number, b: number): number;
export function aes256_decrypt(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export const __wbindgen_export_0: WebAssembly.Table;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hce2ed387aa1c2b69(a: number, b: number, c: number): void;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number): void;
export function __wbindgen_exn_store(a: number): void;
